apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def verCode = 14

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    lintOptions {
        // true--错误发生后停止gradle构建
        abortOnError false
        // 关闭指定问题检查
        //disable 'TypographyFractions', 'TypographyQuotes'
        disable 'InvalidPackage'
//        // true--关闭lint报告的分析进度
//        quiet true
//        // true--只报告error
//        ignoreWarnings true
//        // true--忽略有错误的文件的全/绝对路径(默认是true)
//        //absolutePaths true
//        // true--检查所有问题点，包含其他默认关闭项
//        checkAllWarnings true
//        // true--所有warning当做error
//        warningsAsErrors true
//        // 打开指定问题检查
//        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
//        // 仅检查指定问题
//        check 'NewApi', 'InlinedApi'
//        // true--error输出文件不包含源码行号
//        noLines true
//        // true--显示错误的所有发生位置，不截取
//        showAll true
//        // 回退lint设置(默认规则)
//        lintConfig file("default-lint.xml")
//        // true--生成txt格式报告(默认false)
//        textReport true
//        // 重定向输出；可以是文件或'stdout'
//        textOutput 'stdout'
//        // true--生成XML格式报告
//        xmlReport false
//        // 指定xml报告文档(默认lint-results.xml)
//        xmlOutput file("lint-report.xml")
//        // true--生成HTML报告(带问题解释，源码位置，等)
//        htmlReport true
//        // html报告可选路径(构建器默认是lint-results.html )
//        htmlOutput file("lint-report.html")
//        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
//        checkReleaseBuilds true
//        // 在发布版本编译时检查(即使不包含lint目标)，指定问题的规则生成崩溃
//        fatal 'NewApi', 'InlineApi'
//        // 指定问题的规则生成错误
//        error 'Wakelock', 'TextViewEdits'
//        // 指定问题的规则生成警告
//        warning 'ResourceAsColor'
//        // 忽略指定问题的规则(同关闭检查)
//        ignore 'TypographyQuotes'
    }

    signingConfigs {
        debugConfig {
            keyAlias 'app1'
            keyPassword 'otoutiao1234'
            storeFile file('/Users/pinan/Downloads/OToutiao/app/otoutiao.jks')
            storePassword 'otoutiao1234'
        }
    }

    defaultConfig {
        applicationId "com.example.pinan.otoutiao"
        minSdkVersion 23
        targetSdkVersion 26
        multiDexEnabled true
        versionCode verCode
        versionName APP_VERSION
        resValue("string", 'app_version', APP_VERSION)

        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions("app")
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath true
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG

            signingConfig signingConfigs.debugConfig
        }
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    //渠道Flavors，我这里写了一些常用的
    productFlavors {
        commonsoon {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "commonsoon"]
        }
        zhushou91 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "zhushou91"]
        }
    }

    allprojects {
        repositories {
            mavenCentral()
            maven { url "https://jitpack.io" }
        }
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all {
            def newName
            def timeNow

            if ("true".equals(IS_JENKINS)) {
                timeNow = JENKINS_TIME
                newName = 'yj-android-v' + APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
            } else {
                timeNow = getDate()
                if (variant.buildType.name.equals('debug')) {
                    newName = "yj-android-v${APP_VERSION}-debug.apk"
                } else {
                    newName = 'yj-android-v' + APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                }
            }
            outputFileName = new File(newName)
        }
    }
}

//
//android {
//    compileSdkVersion 26
//    defaultConfig {
//        applicationId "com.example.pinan.otoutiao"
//        minSdkVersion 19
//        targetSdkVersion 26
//        versionCode 1
//        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        vectorDrawables.useSupportLibrary = true
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//
//
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    implementation "com.android.support:cardview-v7:${SUPPORT_LIBRARY_VERSION}"
    implementation "com.android.support:design:${SUPPORT_LIBRARY_VERSION}"
//    // MD dialog
//    implementation 'com.afollestad.material-dialogs:commons:0.9.4.4'

    //网络请求 retrofit+okhttp+gson
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    //recycleview的适配器
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.2.9'
    //黄油刀
    compile 'com.jakewharton:butterknife:7.0.1'
    // 图片加载
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    // 简化版 Adapter
    implementation 'me.drakeet.multitype:multitype:3.3.3'
    // RxLifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
}